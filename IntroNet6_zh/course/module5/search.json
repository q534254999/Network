{"list":["5.0.1.1","5.0.1.2","5.1.1.1","5.1.1.2","5.1.1.3","5.1.1.4","5.1.1.5","5.1.1.6","5.1.1.7","5.1.2.1","5.1.2.2","5.1.2.3","5.1.2.4","5.1.2.5","5.1.2.6","5.1.2.7","5.1.2.8","5.2.1.1","5.2.1.2","5.2.1.3","5.2.1.4","5.2.1.5","5.2.1.6","5.2.1.7","5.2.2.1","5.2.2.2","5.2.2.3","5.2.2.4","5.2.3.1","5.2.3.2","5.3.1.1","5.3.1.2","5.3.1.3","5.3.2.1","5.3.2.2","5.3.2.3","5.3.2.4","5.3.2.5","5.3.2.6","5.3.2.7","5.3.2.8","5.3.3.1","5.3.3.2","5.4.1.1","5.4.1.2"],"map":{"0":[9,15],"1":[0,2,4,8,9,12,13,14,16,18,19,23,24,28,39,44],"2":[0,2,4,8,9,12,13,16,17,18,19,23,24,28,29,30,31,38,39,44],"3":[2,3,4,10,16,19,30,37,44],"4":[9,19],"5":[0,13,18,43,44],"6":[15,25],"7":[39],"8":[9,15],"9":[9],"10":[2,4,9,28,29],"12":[9,29],"16":[9],"18":[12,29],"23":[15],"25":[43],"33":[15],"40":[2],"48":[9,14],"64":[5,25],"100":[2,28,29],"168":[13,14],"192":[13,14],"200":[13,15],"224":[15],"239":[15],"255":[15],"802":[2,44],"1000":[2,28,29],"1010":[9],"1100":[15],"1111":[9],"1500":[5],"1518":[5],"1973":[4],"11111111":[9],"第":[0,8,16,17,23,30,44],"章：以太网":[0,44],"osi":[0,10,11,44],"物理层通过网络介质传输构成数据链路层帧的位。":[0],"以太网是目前世界上占主导地位的":[0],"lan":[0,2,3,30,35,44],"技术。以太网在数据链路层和物理层运行。以太网协议标准定义网络通信的许多方面，包括帧格式、帧大小、时序和编码。当消息在以太网络上的主机之间发送时，主机会将消息格式化为标准指定的帧结构。":[0],"由于以太网由这些较下层的标准组成，因此可能是":[0],"模型中最容易理解的。osi":[0],"模型将数据链路层的编址、成帧和介质访问功能与介质的物理层标准分隔开来。以太网标准定义第":[0],"层协议和第":[0,2,44],"层技术。虽然以太网规格支持不同的介质、带宽以及第":[0],"层和第":[0],"层的其他变体，但所有以太网变体的基本帧格式和地址方案是相同的。":[0],"以太网已经从一种共享介质、有争议的数据通信技术发展成为今天的高带宽、全双工技术，本章将分析它的特性和运作。":[0],"课堂练习":[1,43],"加入我的社交圈！":[1],"许多网络通信都是通过消息传输（文本或即时消息）、视频联系、社交媒体发帖等形式实现的。":[1],"在本练习中，请选择一种您使用最多的通信网络：":[1],"文本（或即时消息）消息传输":[1],"音频":[1],"视频会议":[1],"发送电子邮件":[1],"游戏":[1],"现在您已选择了网络通信类型，请记录您对以下问题的答案：":[1],"您是否必须遵循一个流程来完成他人或自己的注册，然后形成一个通信组？":[1],"您如何与您想要通信的人建立联系？":[1],"您如何限定您的会话，只让您想要通信的人接收到？":[1],"请准备在课堂上讨论您记录的答案。":[1],"加入我的社交圈说明":[1],"以太网封装":[2],"以太网是当前使用最广泛的":[2,44],"技术。":[2],"以太网在数据链路层和物理层运行。以太网是":[2],"ieee":[2,10,44],"和":[2,6,9,14,32,44],"标准中定义的一系列网络技术。以太网支持的数据带宽为：":[2],"mb":[2,28],"s":[2,28],"gb":[2,28],"000":[2],"如图":[2,39],"所示，以太网标准同时定义第":[2],"层技术。对于第":[2,44],"层协议，正如所有":[2,44],"标准一样，以太网依靠数据链路层的两个单独子层运行，即逻辑链路控制":[2,44],"llc":[2,6,44],"mac":[2,3,5,6,9,10,11,12,13,14,15,16,17,18,19,20,21,23,25,30,31,32,33,34,35,36,37,41,42,43,44],"子层。":[2,44],"子层":[2,3,6],"以太网":[2,9],"子层处理上层与下层之间的通信。这通常是在网络软件和设备硬件之间进行的。llc":[2],"子层获取网络协议数据（通常是":[2],"ipv4":[2,13,14,15,17,31,33,34,35,36,37,42,44],"数据包）并加入控制信息，帮助将数据包传送到目的节点。llc":[2],"用于与应用层的上层进行通信，并将数据包转换到下层以便传输。":[2],"在软件中实施，并且其实施不受硬件影响。在计算机中，可将":[2],"视为网卡的驱动程序软件。网卡驱动程序是一个直接与网卡中硬件交互，以在":[2],"子层和物理介质之间传递数据的程序。":[2],"构成数据链路层的较低子层。mac":[2],"由硬件（通常是计算机网卡）实施。ieee":[2],"标准指定了这些细节。图":[2],"列出了常用":[2],"以太网标准。":[2],"如图所示，以太网":[3],"子层有两项主要职责：":[3],"数据封装":[3],"介质访问控制":[3],"数据封装过程包括发送前的帧组装和收到帧时的帧解析。在构建帧时，mac":[3],"层会向网络层":[3],"pdu":[3,4,32,40,44],"添加帧头和帧尾。":[3],"数据封装提供三项主要功能：":[3],"帧定界":[3],"成帧过程提供重要的定界符，用于标识组成帧的一组位。这些定界位会对发送节点与接收节点进行同步。":[3],"编址":[3],"封装过程包含第":[3],"层":[3,4,30,44],"pdu，还提供数据链路层编址。":[3],"错误检测":[3],"每个帧中包含一个帧尾，用于检测传输中的任何错误。":[3],"帧的使用有助于比特的发送，因为会把它们组成比特组放在介质中和在接收节点接收。":[3],"子层的第二项职责是介质访问控制。介质访问控制负责将帧放入介质中和从介质中移除帧。顾名思义，它控制对介质的访问。该子层直接与物理层通信。":[3],"以太网的基础逻辑拓扑是一个多路访问总线；因此，各个网段的所有节点（设备）共享介质。以太网是一种网络争用方法。网络争用方法是指一旦有数据需要发送，所有设备都可以尝试通过共享介质传输数据。载波侦听多路访问":[3],"冲突检测":[3],"csma":[3],"cd":[3],"过程用于在半双工以太网":[3],"中检测和解决冲突。当前的以太网":[3],"采用全双工交换机，可使多台设备同时发送和接受，并无任何冲突。":[3],"以太网演进":[4],"以太网自从":[4],"年创立以来，其标准经历了多次发展，用于规范更快、更灵活的技术。以太网这种不断改进的能力正是它如此受欢迎的主要原因之一。以太网的早期版本速度非常慢，只有":[4],"mbps。时过境迁，最新版本的以太网运行速度已经超过每秒":[4],"千兆。滚动图":[4],"中的时间线，查看以太网的各种版本。":[4],"在数据链路层中，所有速率的以太网的帧结构都几乎相同。如图":[4],"所示，以太网帧结构向第":[4],"添加帧头和帧尾来封装所发送的消息。":[4],"ethernet":[4,43],"ii":[4,8,44],"是":[4,12,44],"tcp":[4,44],"ip":[4,9,13,15,21,30,31,32,33,39,44],"网络中使用的以太网帧格式。":[4],"以太网帧字段":[5,7],"以太网帧大小的最小值为":[5],"个字节，最大值为":[5],"个字节。这包括从":[5],"目的":[5,30,33,35,36],"地址":[5,13,14,15,16,18,30,32,33,34,35,36],"字段到":[5],"帧校验序列":[5],"fcs":[5],"字段的所有字节。在描述帧的大小时，不包含":[5],"前导码":[5],"字段。":[5],"任何长度小于":[5],"个字节的帧都被接收站点视为":[5],"冲突碎片":[5],"或":[5,12,28],"残帧":[5],"而自动丢弃。超过":[5],"个字节的数据帧被视为":[5],"巨帧":[5],"小型巨型帧":[5],"。":[5,10],"如果发送的帧小于最小值或者大于最大值，接收设备将会丢弃该帧。帧之所以被丢弃，可能是因为冲突或其他多余信号而被视为无效。":[5],"在图中，单击以太网帧的每一个字段了解其更多功能。":[5],"练习":[6,7,22,27],"实验":[8,16,23],"使用":[8],"wireshark":[8],"检查以太网帧":[8],"在本实验中，您将完成以下目标：":[8,16,23],"部分：检查以太网":[8],"帧中的帧头字段":[8],"部分：使用":[8],"捕获和分析以太网帧":[8],"地址和十六进制":[9],"地址是一种表示为":[9],"个十六进制数字（每个十六进制数字为":[9],"位）的":[9],"位二进制值。":[9],"就像十进制是以":[9],"为基数的数制系统一样，十六进制是以":[9],"为基数的数制系统。以":[9],"为基数的数制系统使用数字":[9],"到":[9,15],"和字母":[9],"a":[9,18,19,21,28,30,31,39],"f。图":[9],"显示了":[9],"0000":[9],"这些二进制数的十进制和十六进制值。将一个值表示为一个十六进制数字比表示为四个二进制位要容易。":[9],"位（1":[9],"个字节）是一种常用的二进制组，从":[9],"00000000":[9],"的二进制可表示为从":[9],"00":[9,12,15],"ff":[9,14],"的十六进制（如图":[9],"所示）。前导零始终都会显示，以完整的":[9],"位表示。例如，二进制值":[9],"以十六进制显示为":[9],"0a。":[9],"注意：对于字符":[9],"9，区分十六进制值与十进制值非常重要，具体如图所示。":[9],"表示十六进制值":[9],"十六进制通常用以":[9],"0x":[9],"为前导的值（例如":[9],"0x73）或以":[9],"为下标的值来表示。在少数情况下，后面可能会接":[9],"h，例如":[9],"73h。但是，由于下标文字在命令行或编程环境中无法识别，因此十六进制的技术表示法以":[9],"（零":[9],"x）为前导。按照这种表示法，以上示例应分别显示为":[9],"0x0a":[9],"0x73。":[9],"十六进制用于表示以太网":[9],"地址和":[9,13,21,30,31,44],"v6":[9],"地址。":[9,10,11,13,14,17,21,30,31,33,34,35,36,37],"十六进制的转换":[9],"十进制与十六进制值之间的数字可以直接转换，但快速除以或乘以":[9],"不一定很方便。如果需要进行这种转换，通常比较容易的方法是：先将十进制或十六进制值转换为二进制值，然后将二进制值转换为适当的十进制或十六进制值。":[9],"地址：以太网身份":[10],"在以太网中，每台网络设备都连接到同一个共享介质。以太网曾经主要是半双工拓扑，使用多路访问总线或后来的以太网集线器。这就意味着所有节点都将接收每一个传输的帧。为了避免处理每个帧时产生过多开销，创建了":[10],"地址来标识实际源和目的节点。mac":[10],"编址为":[10],"模型的较低层提供了设备识别方法。虽然现在以太网已经转换到了全双工网卡和交换机，但不是目的设备的设备仍可以接收到以太网帧。":[10],"地址结构":[10],"地址值是":[10],"为确保每台以太网设备使用全局唯一地址而强制厂商遵守规定的直接结果。ieee":[10],"规定销售以太网设备的任何厂商都要向":[10],"注册。ieee":[10],"为厂商分配了一个":[10],"字节（24":[10],"位）的代码，称为组织唯一标识符":[10],"oui":[10],"要求厂商遵守两条简单的规定，如图所示：":[10],"分配给网卡或其他以太网设备的所有":[10],"地址都必须使用厂商分配的":[10],"作为前":[10],"个字节。":[10],"相同的所有":[10],"地址必须在最后":[10],"个字节中分配一个唯一值。":[10],"注意：由于生产中或一些虚拟机实施方法中的错误，可能存在重复的":[10],"地址。在以上任一情况下，必须在新网卡或软件中修改":[10],"帧处理":[11],"地址通常称为烧录地址":[11],"bia":[11],"，因为传统上该地址被烧录到网卡的":[11],"rom（只读存储器）中。这意味着该地址会永久编码到":[11],"rom":[11],"芯片中。":[11],"注意：在现代":[11],"pc":[11,17,18,19,21,30,31,39],"操作系统和网卡中，可以更改软件中的":[11],"地址。当试图访问基于":[11],"进行过滤的网络时，这一点非常有用。因此，根据":[11],"地址来过滤或控制流量就不再安全了。":[11],"当计算机启动时，网卡首先要做的就是将":[11],"地址从":[11],"复制到":[11],"ram":[11,34],"中。设备在向以太网络转发消息时，会将报头信息附加到帧上。报头信息包含源":[11],"地址和目的":[11],"单击动画中的":[11],"播放":[11,20,21,35,36,37],"，观看帧转发流程。收到以太网帧时，网卡会查看帧中的目的":[11],"地址是否与设备":[11],"中存储的物理":[11],"地址匹配。如果不匹配，设备就会丢弃帧。如果与帧中的目的":[11],"匹配，则网卡会将帧向上传送到":[11],"层进行解封处理。":[11],"注意：如果目的":[11,18],"地址是主机为其成员的广播或组播组时，以太网网卡也会接收帧。":[11],"必须为任何可能成为以太网帧的源或目的设备分配":[11],"地址。这些设备包括工作站、服务器、打印机、移动设备和路由器。":[11],"地址表示方法":[12],"在":[12],"windows":[12,38,39],"主机上，ipconfig":[12],"all":[12],"命令可用于确定以太网适配器的":[12],"地址。请注意，图":[12],"中的显示表示计算机的物理地址":[12],"de":[12],"dd":[12],"a7":[12],"b2。如果您有访问权限，可能想在自己的计算机上试一下。ifconfig":[12],"命令在":[12],"linux":[12],"主机上使用。":[12],"根据不同的设备和操作系统，您将看到":[12],"地址的各种表示方式，如图":[12],"所示。思科路由器和交换机使用的形式为":[12],"xxxx":[12],"xxxx，其中":[12],"x":[12],"代表十六进制字符。":[12],"单播":[13],"在以太网中，第":[13],"层单播、组播和广播通信会使用不同的":[13],"地址是帧从一台发送设备发送到一台目的设备时使用的唯一地址。":[13],"在动画中的示例中，ipv4":[13],"地址为":[13],"的主机（源）向":[13],"单播地址为":[13],"的服务器请求网页。要传送和接收单播数据包，目的":[13],"地址必须包含于":[13],"包报头中。相应的目的":[13],"地址也必须出现于以太网帧报头中。只有":[13],"地址相结合才能将数据传送到特定的目的主机。":[13],"源主机用来确定目的":[13],"地址的流程称为地址解析协议":[13],"arp":[13,31,33,34,35,36,37,38,39,40,41,42,44],"。arp":[13],"将在本章后续部分讨论。":[13],"虽然目的":[13],"地址可以是单播、广播或组播地址，但是源":[13],"地址必须始终为单播地址。":[13],"广播":[14,41],"广播数据包以主机部分全部为一":[14],"的地址作为目的":[14],"地址。这种地址计数法表示本地网络（广播域）中的所有主机都将接收和处理该数据包。arp":[14],"dhcp":[14],"等许多网络协议都使用广播。":[14],"如动画所示，源主机向其网络中的所有设备发送":[14],"广播数据包。ipv4":[14],"目的地址为广播地址":[14],"255。如果":[14],"广播数据包被封装在以太网帧内，则目的":[14],"地址为十六进制（在二进制中是":[14],"个":[14],"1）的":[14],"组播":[15],"组播地址允许源设备向一组设备发送数据包。属于某一组播组的设备都指派有该组播组":[15],"地址。ipv4":[15],"组播地址的范围为":[15],"255。ipv6":[15],"组播地址的范围以":[15],"ff00":[15],"开头。由于组播地址代表一组地址（有时称为主机组），因此只能用作数据包的目的地址。源地址始终为单播地址。":[15],"远程游戏中需要使用组播地址，其中有许多玩家通过远程连接来玩同一个游戏。另一个使用组播地址的例子就是通过视频会议进行远程教学，其中许多学生将连接到同一个教室。":[15],"如同单播和广播地址一样，组播":[15],"地址也需要相应的组播":[15],"地址才能在本地网络中实际传送帧。与":[15],"组播地址关联的组播":[15],"地址是一个以十六进制的":[15],"01":[15],"5e":[15],"开头的特殊值。组播":[15],"地址的其余部分通过将":[15],"组播组地址的低":[15],"位换算成":[15],"个十六进制字符而创建。对于":[15],"ipv6":[15],"地址，组播":[15],"地址以":[15],"开头。":[15],"动画所示的示例是组播十六进制地址":[15],"c8。ipv4":[15],"的最后一个字节（或":[15],"位）是十进制值":[15],"200。计算十六进制对应值的最简单的方法是首先用每四位使用一个空格，将其转换为二进制，200（十进制）":[15],"1000（二进制）。二进制转换为十六进制的表已给出，1100":[15],"1000（二进制）":[15],"0xc8。":[15],"查看网络设备的":[16],"部分：建立拓扑并初始化设备":[16],"部分：配置设备并检验连接":[16],"部分：显示、描述并分析以太网":[16],"交换机基础知识":[17],"层以太网交换机使用":[17],"地址做出转发决策。它完全忽视帧的数据部分的协议，例如":[17],"数据包。交换机仅根据第":[17],"层以太网":[17],"地址做出转发决策。":[17],"与旧式以太网集线器（它重复除了传入端口以外的所有端口的位）不同，以太网交换机在做出每个帧的转发决策时会查询":[17],"地址表。如图所示，四端口交换机已启动。但它还未获知四台连接的":[17],"的":[17,18,19,30,36],"注意：mac":[17],"地址表有时也称为内容可编址内存":[17],"cam":[17],"表。虽然":[17],"表这一术语相当常见，但在本课程中，我们将称其为":[17],"地址表。":[17],"获知":[18],"交换机通过检查端口传入帧的源":[18],"地址来动态构建":[18],"地址表。交换机通过匹配帧中的目的":[18],"地址与":[18,35],"地址表中的条目来转发帧。":[18],"对进入交换机的每个以太网帧执行下列流程。":[18],"学习":[18],"检查源":[18],"检查进入交换机的每个帧的新信息进行学习。它是通过检查帧的源":[18],"地址和帧进入交换机的端口号来完成这一步的。":[18],"如果源":[18],"地址不存在，会将其和传入端口号一并添加到表中。如图":[18],"所示，pc":[18],"正在向":[18,19],"d":[18,19],"发送以太网帧。该交换机将":[18],"地址添加到表中。":[18],"地址已存在于表中，则交换机会更新该条目的刷新计时器。默认情况下，大多数以太网交换机将条目在表中保留":[18],"分钟。":[18,38],"注意：如果源":[18],"地址已存在于表中，但是在不同的端口上，交换机会将该地址视为一个新的条目。使用相同的":[18],"地址和最新的端口号来替换该条目。":[18],"转发":[18],"检查目的":[18],"接下来，如果目的":[18],"地址为单播地址，该交换机会看帧中的目的":[18],"地址表中的条目是否匹配。":[18],"如果表中存在该地址，交换机会从指定端口转发帧。":[18],"如果表中不存在该地址，交换机会从除传入端口外的所有端口转发帧。我们将这称为未知单播。如图":[18],"所示，交换机的":[18],"表中没有目的":[18],"地址，因此交换机会从除端口":[18],"外的所有端口转发帧。":[18],"地址为广播或组播，该帧将泛洪到除传入端口外的所有端口。":[18],"过滤帧":[19],"交换机是从不同的设备接收帧，因此它可以通过检查每个帧的源":[19],"地址来填充它的":[19],"地址表。如果交换机的":[19],"地址表包含目的":[19],"地址，则交换机将过滤该帧并将其从单个端口转发出去。":[19],"图":[19,24],"和图":[19],"展示了":[19],"将帧发送回至":[19],"a。交换机首先获知":[19],"地址。下一步，因为该交换机的表中存在":[19],"地址，它将仅从端口":[19],"将该帧发出去。":[19],"展示":[19],"发送另一个帧。mac":[19],"地址表中已包含":[19],"地址，因此该条目的五分钟刷新计时器被重置。下一步，因为该交换机的表中存在":[19],"视频演示":[20,21,35,36,37],"连接的交换机的":[20],"地址表":[20,23],"交换机可以有多个":[20],"地址与单个端口关联。当该交换机与另一个交换机连接时，这很常见。交换机对每个使用不同源":[20],"地址接收的帧有单独的":[20],"地址表条目。":[20],"单击图中的":[20,21,35,36],"，观看两台连接的交换机构建":[20],"地址表的演示。":[20],"单击此处从演示文稿中下载视频幻灯片。":[20,21,35,36,37],"单击此处可阅读本视频的脚本。":[20,21,35,36,37],"将帧发送到默认网关":[21],"如果一台设备的":[21],"地址在远程网络上，则不能将以太网帧直接发送到目的设备。而是将以太网帧发送到默认网关（路由器）的":[21],"，观看":[21,35,36],"与其默认网关通信的演示。":[21],"注意：在视频中，从":[21],"发送到远程网络中的目的地的":[21],"数据包具有":[21],"的源":[21],"地址和远程主机的目的":[21],"地址。返回的":[21],"数据包将具有远程主机的源":[21],"的目的":[21],"交换！":[22],"查看交换机的":[23],"部分：构建和配置网络":[23],"部分：检查交换机的":[23],"结合使用":[23],"ios":[23,29],"cli":[23,29],"与交换机":[23],"思科交换机上的帧转发方法":[24],"在过去，交换机使用下面的两种转发方法之一来进行网络端口间的数据交换：":[24],"存储转发交换":[24],"直通交换":[24,25],"显示这两种方法之间的差异。":[24],"在存储转发交换中，当交换机收到帧时，它将数据存储在缓冲区中，直到收下完整的帧。存储过程期间，交换机分析帧以获得有关其目的地的信息。在此过程中，交换机还将使用以太网帧的循环冗余校验":[24],"crc":[24],"帧尾部分来执行错误检查。":[24],"根据帧中的位数（即":[24],"位的数量），使用数学公式来确定收到的帧是否有错。在确认帧的完整性之后，帧将从对应的端口转发到其目的地。当在帧中检测到错误时，交换机放弃该帧。放弃有错的帧可减少损坏的数据所耗用的带宽量。存储转发交换对于融合网络中的服务质量":[24],"qos":[24],"分析是必需的，在融合网络中，必须对帧进行分类以划分流量优先级。例如，ip":[24],"语音数据流的优先级需要高于":[24],"web":[24,31],"浏览流量。":[24],"在图":[24],"中，播放存储转发过程的演示动画。":[24],"单击此处以了解存储转发交换和直通交换的详细信息。":[24],"在直通交换中，交换机在收到数据时立即处理数据，即使传输尚未完成。交换机只缓冲帧的一部分，缓冲的量仅足以读取目的":[25],"地址，以便确定转发数据时应使用的端口。目的":[25],"地址位于帧中前导码后面的前":[25],"个字节。交换机在其交换表中查找目的":[25],"地址，确定外发接口端口，然后通过指定的交换机端口将帧转发到其目的地。交换机对该帧不执行任何错误检查。":[25],"播放直通交换过程的演示动画。":[25],"直通交换有两种变体：":[25],"快速转发交换":[25],"快速转发交换提供最低程度的延时。快速转发交换在读取目的地址之后立即转发数据包。由于快速转发交换在收到整个数据包之前就开始转发，因此有时候中继数据包时会出错。这种情况并不经常发生，而且目的网络适配器在收到含错数据包时会将其丢弃。在快速转发模式下，延时是指从收到第一个位到传出第一个位之间的时间差。快速转发交换是典型的直通交换方法。":[25],"免分片交换":[25],"在免分片交换中，交换机在转发之前存储帧的前":[25],"个字节。可以将免分片交换视为存储转发交换和直通交换之间的折衷。免分片交换只存储帧的前":[25],"个字节的原因是，大部分网络错误和冲突都发生在前":[25],"个字节。免分片交换在转发帧之前对帧的前":[25],"个字节执行小错误检查以确保没有发生过冲突，并且尝试通过这种方法来增强快速转发交换功能。免分片交换是存储转发交换的高延时和高完整性与快速转发交换的低延时和弱完整性之间的折衷。":[25],"某些交换机可配置为按端口执行直通交换，当达到用户定义的错误阈值时，这些端口自动切换为存储转发。当错误率低于该阈值时，端口自动恢复到直通切换。":[25],"交换机上的内存缓冲":[26],"以太网交换机在转发帧之前，可以使用缓冲技术存储帧。当目的端口由于拥塞而繁忙时，也可以使用缓冲，交换机将一直存储帧，直到可以传送该帧。":[26],"如图所示，有两种内存缓冲方法：基于端口的内存缓冲和共享内存缓冲。":[26],"基于端口的内存缓冲":[26],"在基于端口的内存缓冲中，帧存储在链接到特定传入端口和传出端口的队列中。一个帧只有在队列中位于它前面的所有帧都成功传送之后才会传送到外发端口。有可能因为一个目的端口繁忙而造成单个帧拖延内存中所有帧的传输。即使其他帧可以传送到开放的目的端口，这种延迟仍然会发生。":[26],"共享内存缓冲":[26],"共享内存缓冲将所有帧都放入交换机上所有端口共享的公共内存缓冲区中。交换机动态分配各个端口所需要的缓冲内存量。缓冲区中的帧动态链接到目的端口。这样就可以在一个端口上接收数据包，然后在另一个端口上传出该数据包，而无需将其移到其他队列。":[26],"交换机保留帧对端口链接的映射，映射中显示了数据包需要传送到何处。当帧成功发送之后，映射链接即被清除。存储在缓冲区中的帧的数量受到整个内存缓冲区大小的限制，而不是仅受限于单个端口缓冲区。这样就能传送更大的帧，而丢弃的帧更少。这对于非对称交换尤为重要。非对称交换允许在不同端口上使用不同的数据速率。这可以使更多带宽专用于特定端口，例如连接到服务器的端口。":[26],"帧转发方法":[27],"双工和速率设置":[28],"交换机上的两个最基本设置为每个交换端口的带宽设置和双工设置。交换机端口和连接的设备（例如计算机或另一台交换机）的双工设置和带宽设置必须匹配。":[28],"用于以太网通信的双工设置有两种：半双工和全双工。":[28],"全双工":[28],"连接的两端均可同时收发信息。":[28],"半双工":[28],"一次只能是连接的两端中其中一端发送信息。":[28],"自动协调是大多数以太网交换机和网卡的一项可选功能。自动协调使两台设备能够自动交换有关速率和双工功能的信息。交换机和连接的设备会选择最高性能模式。如果两台设备具有最高常见带宽的功能，则会选择全双工。":[28],"例如，在图":[28],"中，pc":[28],"的以太网网卡可在全双工或半双工模式下运行以及以":[28],"的速度运行。pc":[28],"连接到交换机":[28],"s1":[28],"的端口":[28],"上，可在全双工或半双工模式下运行以及以":[28],"s、100":[28],"的速度运行。如果两台设备使用自动协调，则工作模式为全双工和":[28],"s。":[28],"注意：大多数思科交换机和以太网网卡默认采用自动协调功能，以提高速率和实现双工。千兆以太网端口仅以全双工模式运行。":[28],"双工不匹配":[28],"以太网链路的性能问题的最常见原因之一就是链路上的一个端口使用半双工而另一个端口使用全双工（如图":[28],"所示）。链路上的一个或两个端口重置后会出现这样的情况，自动协调过程并不会使链路上的两个端口的配置相同。当用户重新配置链路的一端而忘记重新配置另一端时，也会出现这样的情况。链路的两端均应都使用或都不使用自动协调。":[28],"auto":[29],"mdix":[29],"除了使用正确的双工设置，为每个端口定义正确的电缆类型也是必要的。特定设备之间的连接，例如交换机到交换机、交换机到路由器、交换机到主机和路由器到主机设备，曾经要求使用特定类型的电缆（交叉电缆或直通电缆）。而现在，大多数交换机设备可以通过在":[29],"中使用":[29],"接口配置命令来启用自动介质相关接口交叉":[29],"功能。":[29],"当":[29],"功能启用时，交换机可检测连接到端口的电缆类型，并相应地配置接口。因此，如果要连接到交换机上的铜缆":[29],"端口，您既可以使用交叉电缆，也可以使用直通电缆，而无需考虑连接另一端的设备类型。":[29],"注意：在运行":[29],"cisco":[29,30],"release":[29],"se":[29],"或更高版本的交换机上，默认启用":[29],"同一网络中的目的地":[30],"将两个主要地址分配给以太网":[30],"上的设备：":[30],"物理地址（mac":[30],"地址）":[30],"用于同一网络中的以太网网卡之间的通信。":[30],"逻辑地址（ip":[30],"用于将数据包从原始源发送到最终目的地。":[30],"地址用于标识原始源的地址和最终目的地址。目的":[30],"地址可在同一":[30],"网络中作为源地址，也可用于远程网络。":[30],"注意：当给定一个域名（例如":[30],"www":[30,43],"com）时，大多数应用程序会使用":[30],"dns（域名系统）来确定":[30],"地址。dns":[30],"将在后面的章节中讨论。":[30],"层或物理地址，和以太网":[30],"地址一样，都有不同的目的。这些地址用于通过封装的":[30],"数据包将数据链路帧从同一网络中一个网卡发送到另一个网卡。如果目的":[30],"地址处于同一网络中，则目的":[30],"地址是目的设备的":[30],"图中展示了":[30],"的以太网":[30,31],"地址正在向同一网络中的文件服务器发送":[30],"数据包。":[30],"层以太网帧包括：":[30],"文件服务器的以太网网卡的":[30],"源":[30,33,35,36],"的以太网网卡的":[30],"数据包包括：":[30],"原始源，即":[30],"最终目的地，即服务器的":[30],"目的远程网络":[31],"如图所示，当目的":[31],"地址处于远程网络中时，则目的":[31],"地址为主机的默认网关（即路由器的网卡）的地址。我们采用一个邮政类比，这和人们带着信件去当地邮局一样。他们只需要将信件带到邮局，然后邮局会负责将信件送达最终目的地。":[31],"图中展示了向远程网络中的":[31],"服务器发送":[31],"数据包的":[31],"地址。路由器通过检查目的":[31],"地址来确定转发":[31],"数据包的最佳路径。这类似于邮政服务根据收件人的地址转发邮件。":[31],"路由器收到以太网帧后，将解封第":[31],"层信息。它可借助目的":[31],"地址确定下一跳设备，然后将":[31],"数据包封装在发送接口的新数据链路帧中。在路径中的每个链路上，ip":[31],"数据包将会封装到一个根据与此链路相关的特定数据链路技术而定的帧中，例如以太网。如果下一跳设备为最终目的地，则目的":[31],"地址将是该设备的以太网网卡的":[31],"数据流中":[31],"地址如何与通往目的地路径中每条链路上的":[31],"地址相关联？这可以通过地址解析协议":[31],"过程来完成。":[31],"packet":[32,40],"tracer":[32,40],"识别":[32],"本练习已优化以方便查看":[32,40],"pdu。设备已配置。您将在模拟模式中收集":[32,40],"信息，并回答有关您收集的数据的一系列问题。":[32,40],"地址说明":[32],"pka":[32,40],"简介":[33],"回想一下，以太网网络中具有":[33],"地址的每一台设备也都有以太网":[33],"地址。当设备发送以太网帧时，将包含以下两个地址：":[33],"以太网网卡的":[33],"地址，即最终目的设备或路由器的":[33],"发送方的以太网网卡的":[33],"设备会使用":[33],"确定目的":[33],"地址。arp":[33,34],"提供两个基本功能：":[33],"将":[33,34],"地址解析为":[33,34,44],"维护映射表":[33],"功能":[34],"当数据包发送到要封装入以太网帧的数据链路层时，设备将参照其内存中的表来查找映射至":[34],"地址的":[34,35,42],"地址。此表称为":[34],"表或":[34],"缓存。arp":[34],"表存储在设备的":[34],"中。":[34],"发送设备会在自己的":[34],"表中搜索目的":[34],"地址和相应的":[34],"如果数据包的目的":[34],"地址与源":[34,37],"地址处于同一个网络，则设备会在":[34],"如果目的":[34,37],"地址不在同一个网络中，则设备会在":[34],"表中搜索默认网关的":[34],"这两种情况都是搜索设备的":[34],"表中的每一条（或每行）将一个":[34],"地址与一个":[34],"地址绑定。我们将这两个值之间的关系称为映射":[34],"只是表示您可以在表中查找":[34],"地址并发现相应的":[34],"表暂时保存（缓存）lan":[34],"上设备的映射。":[34],"如果设备找到":[34],"地址，其相应的":[34],"地址将作为帧中的目的":[34],"地址。如果找不到该条目，设备会发送一个":[34],"请求。":[34,35],"请求":[35],"当设备需要与":[35],"地址关联的":[35,36],"地址，而它的":[35],"表中没有":[35],"地址条目时，会发送一个":[35],"消息直接封装到以太网帧中。没有":[35],"报头。arp":[35],"请求消息包括：":[35],"这是需要相应的":[35],"这是未知":[35],"地址，并在":[35],"请求消息中为空。":[35],"请求使用以下报头信息封装在以太网帧中：":[35],"这是一种要求":[35],"上的所有以太网网卡接受并处理":[35],"请求的广播地址。":[35],"这是":[35,36],"请求发送方的":[35,36],"类型":[35,36,44],"消息的类型字段为":[35,36],"0x806。该类型字段会通知接收网卡需要将帧的数据部分传递给":[35,36],"处理。":[35,36],"因为":[35],"请求属于广播，交换机会将其泛洪到除接收端口外的其他所有端口。lan":[35],"上的所有以太网网卡会处理广播。每台设备必须处理":[35],"请求，以检查目的":[35],"地址是否与其自己的地址相匹配。路由器不会将广播转发到其他接口。":[35],"上只有一台设备的":[35],"请求中的目的":[35],"地址相匹配。所有其他设备将不应答。":[35],"从本地网络中请求目的":[35],"地址的演示。":[35],"应答":[36],"只有具有和":[36],"请求中目的":[36],"地址的设备会以":[36],"应答做出响应。arp":[36],"应答消息包括：":[36],"发送方的":[36],"这是发送方的ipv4":[36],"地址，发送方即被请求":[36],"地址的那台设备。":[36],"这是发送方的":[36],"地址，即":[36],"请求发送方需要的":[36],"应答使用以下报头信息封装在以太网帧中：":[36],"应答发送方的":[36],"只有原始发送":[36],"请求的设备会收到单播":[36],"应答。收到该":[36],"应答后，设备会将":[36],"地址及相应的":[36],"地址添加到自身的":[36],"表中。该":[36],"地址的数据包现在便可使用其相应的":[36],"地址封装在帧中。":[36],"应答的演示。":[36,37],"如果没有设备响应":[36],"请求，就无法创建帧，所以会丢弃数据包。":[36],"表中的条目具有时间戳。如果设备在时间戳到期时没有从特定设备收到帧，此设备的条目将会从":[36],"表中删除。":[36],"此外，也可以在":[36],"表中输入静态映射条目，但这种情况很少见。静态":[36],"表条目没有到期时间，必须手动删除。":[36],"注意：ipv6":[36],"使用与":[36],"类似的":[36],"流程，称为":[36],"icmpv6":[36],"邻居发现。与":[36],"请求和":[36,37,44],"应答类似，pv6":[36],"使用邻居请求和邻居通告消息。":[36],"在远程通信中的角色":[37],"地址不在同一个网络中，则源设备需要将帧发送到它的默认网关。这是本地路由器的接口。每当源设备具有":[37],"地址在其他网络中的数据包时，它会使用路由器的目的":[37],"地址将该数据包封装在帧中。":[37],"默认网关地址的":[37],"地址存储在主机的":[37],"配置中。当主机创建通往某台目的主机的数据包时，会将目的":[37],"地址与其自己的":[37],"地址进行比较，以确定两个":[37],"地址是否位于相同的第":[37],"层网络上。如果目的主机不在同一网络上，源主机将从":[37],"表中查找默认网关的":[37],"地址条目。如果没有该条目，源主机将使用":[37],"流程来确定默认网关的":[37],"单击":[37],"，观看与默认网关关联的":[37],"从":[38],"表中删除条目":[38],"对于每台设备，arp":[38],"缓存定时器将会删除在指定时间内未使用的":[38],"条目。具体时间取决于设备及其操作系统。例如，如图所示，有些":[38],"操作系统存储":[38],"缓存条目的时间为":[38],"也可以使用命令来手动删除":[38],"表中的全部或部分条目。当条目被删除之后，要想在":[38],"表中输入映射，必须重复一次发送":[38],"请求和接收":[38],"回复的过程。":[38],"表":[39,40],"所示，在思科路由器上，show":[39],"命令用于显示":[39],"表。":[39],"所示，在":[39],"上，arp":[39],"检查":[40,42],"表说明":[40],"作为广播帧，本地网络上的每台设备都会收到并处理":[41],"请求。在一般的商业网络中，这些广播对网络性能的影响可能微不足道。但是，如图所示，如果大量设备都已启动，并且同时开始使用网络服务，网络性能可能会有短时间的下降。在设备发出初始":[41],"广播并获取必要的":[41],"地址之后，网络受到的影响将会降至最小。":[41],"欺骗":[42],"有时，使用":[42],"可能会造成潜在的安全风险，称为":[42],"欺骗或":[42],"毒害。如图所示，这种技术由攻击者用来应答属于另一台设备（例如默认网关）的":[42],"请求。攻击者会发送一个带有其":[42],"应答。arp":[42],"应答的接收方会将错误的":[42],"地址添加到其":[42],"表中，并将这些数据包发送给攻击者。":[42],"企业级别的交换机包含称为动态":[42],"dai":[42],"的缓解技术。dai":[42],"不在本课程的讨论范围之内。":[42],"和选择":[43],"注意：本练习可由单人完成、也可以分组或在课堂集体学习环境下完成。":[43],"请单击以下链接查看视频：":[43],"http":[43],"netevents":[43],"tv":[43],"video":[43],"bob":[43],"metcalfe":[43],"the":[43],"history":[43],"of":[43],"讨论的主题不仅包括以太网开发的起源，而且包括以太网技术的未来（未来的发展途径）。":[43],"观看完视频并将其内容与第":[43],"章内容进行比较后，打开网页搜索关于以太网的信息。使用建构主义方法：":[43],"以太网首次开发出来时是什么形态？":[43],"以太网在过去约":[43],"年间哪些地方是保持不变的？为了使其对现在的数据传输方法有用":[43],"适用，做了哪些更改？":[43],"收集三张展现以前、现在和未来以太网物理介质和设备（重点是交换机）的图片":[43],"和同学们分享这些图片并进行讨论：":[43],"以太网物理介质和中间设备有什么变化？":[43],"以太网物理介质和中间设备哪些地方保持不变？":[43],"以太网未来将如何改变？":[43],"技术。以太网是":[44],"标准中定义的一系列网络技术。以太网标准定义第":[44],"在数据链路层中，所有带宽的以太网的帧结构都几乎相同。以太网帧结构向第":[44],"添加帧头和帧尾来封装所发送的报文。":[44],"以太网成帧有两种样式：ieee":[44],"以太网标准和":[44],"dix":[44],"以太网标准（现在称为以太网":[44],"ii）。两种标准之间最大的差异是":[44],"中增加了起始帧分界符":[44],"sfd":[44],"，并且":[44],"字段变为":[44],"长度":[44],"字段。ethernet":[44],"网络中使用的以太网帧格式。作为":[44],"标准的一种实现形式，以太网帧提供":[44],"编址和错误检测功能。":[44],"以太网提供的第":[44],"层编址支持单播、组播和广播通信。以太网使用地址解析协议来确定目的设备的":[44],"地址，并针对已知的":[44],"地址映射它们。":[44],"网络中的每个节点都有":[44],"地址。ip":[44],"地址用于标识数据包的原始源和最终目的地。以太网":[44],"地址用于将数据包从一个以太网网卡发送到同一个":[44],"网络中的另一个以太网网卡。arp":[44],"用于将已知":[44],"地址映射到":[44],"地址，以便通过正确的第":[44],"层地址将数据包封装到以太网帧中。":[44],"依赖特定类型的以太网广播消息和以太网单播消息（称为":[44],"应答）。arp":[44],"协议将":[44],"地址并维护映射表。":[44],"在大多数以太网网络中，终端设备通常以点对点的方式连接到第":[44],"层全双工交换机。第":[44],"交换机只根据":[44],"数据链路层（第":[44],"层）mac":[44],"地址执行交换和过滤。第":[44],"层交换机建立了一个":[44],"地址表，它使用该表来作出转发决策。第":[44],"层交换机依靠路由器来传递各个":[44],"子网之间的数据。":[44]}}